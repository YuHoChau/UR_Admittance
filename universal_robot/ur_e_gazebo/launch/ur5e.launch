<?xml version="1.0"?>
<launch>
  <arg name="limited" default="false"  doc="If true, limits joint range [-PI, PI] on all joints." />
  <arg name="paused" default="false" doc="Starts gazebo in paused mode" />
  <arg name="gui" default="true" doc="Starts gazebo gui" />
  <!--1. cartesian_position_controller_sim; 2. cartesian_velocity_controller_sim; 3. cartesian_inverse_dynamics_controller_sim-->
  <arg name="controller" default="arm_controller" doc="Specify the Controller in ROS"/>
  <!--1. empty; 2. polish-->
  <arg name="environment" default="empty" doc="Specify the virtual environment"/>
  <!-- startup simulated world -->
  <!-- <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="worlds/empty.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include> -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- <arg name="world_name" default="worlds/empty.world"/> -->
    <arg name="world_name" value="$(find ur_e_gazebo)/worlds/$(arg environment).world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- send robot urdf to param server -->
  <include file="$(find ur_e_description)/launch/ur5e_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 0.01" respawn="false" output="screen" />

  <include file="$(find ur_e_gazebo)/launch/controller_utils.launch"/>
  
  <!-- start this controller -->
  <rosparam file="$(find ur_e_gazebo)/controller/arm_controller_ur5e.yaml" command="load"/>
  <!-- <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn cartesian_position_controller_sim " respawn="false" output="screen"/> -->
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn $(arg controller) " respawn="false" output="screen"/>
  <!-- <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn cartesian_inverse_dynamics_controller_sim " respawn="false" output="screen"/> -->

</launch>
